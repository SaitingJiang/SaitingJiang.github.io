<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>补档说明</title>
      <link href="/2022/05/09/bu-dang-shuo-ming/"/>
      <url>/2022/05/09/bu-dang-shuo-ming/</url>
      
        <content type="html"><![CDATA[<p>本站终于上线，我会陆续上传之前及以后的学习到的知识技能总结，包括相关笔记，也是为了记录进度，以此鞭策自己，当然也会分享一些生活日常或思想交流及转载优秀但小众的文章，尽情期待。</p>]]></content>
      
      
      <categories>
          
          <category> 说明 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vue学习笔记(一)</title>
      <link href="/2022/05/09/vue-xue-xi-bi-ji-yi/"/>
      <url>/2022/05/09/vue-xue-xi-bi-ji-yi/</url>
      
        <content type="html"><![CDATA[<p><strong>vue 简介</strong></p><p>Vue 是一套用于构建用户界面的<u>前端框架</u>。</p><p>使用 vue 构建用户界面，解决了 jQuery + 模板引擎 的诸多痛点，极大的提高了前端开发的效率和体验。</p><p>vue 全家桶：vue（核心库） vue-router（路由方案） vuex（状态管理方案） vue 组件库（快速搭建页面 UI 效果的方案）</p><p>vue 框架的特性，主要体现在如下两方面：① 数据驱动视图    ② 双向数据绑定</p><p>MVVM 是 vue 实现数据驱动视图和双向数据绑定的核心原理。它把每个 HTML 页面都拆分成了如下三个部分：</p><p>​在 MVVM 概念中：</p><p>​View 表示当前页面所渲染的 DOM 结构。</p><p>​Model 表示当前页面渲染时所依赖的数据源。</p><p>​ViewModel 表示 vue 的实例，它是 MVVM 的核心。</p><p>​工作原理：</p><p>​ViewModel 作为 MVVM 的核心，是它把当前页面的数据源（Model）和页面的结构（View）连接在了一起。</p><p>​当数据源发生变化时，会被 ViewModel 监听到，VM 会根据最新的数据源自动更新页面的结构</p><p>​当表单元素的值发生变化时，也会被 VM 监听到，VM 会把变化过后最新的值自动同步到 Model 数据源中</p><p><strong>vue 的基本使用</strong></p><p>① 导入 vue.js 的 script 脚本文件</p><p>② 在页面中声明一个将要被 vue 所控制的 DOM 区域</p><p>③ 创建 vm 实例对象（vue 实例对象）</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 2. 声明要被 vue 所控制的 DOM 区域 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;age&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 1. 导入 vue 的脚本文件 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./lib/vue-2.6.12.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- 3. 创建 vue 的实例对象 --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">     <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token comment">//       -----------------------------------</span>       <span class="token comment">//                                                           -</span>       <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span><span class="token comment">//    ------el指向的选择器，就是View试图区域        -</span>       <span class="token comment">//                                                           -</span>       <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token comment">//        ------------                     new Vue()构造函数，得到的</span>         <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span><span class="token comment">//   data指向的对象                   vm实例对象就是ViewModel</span>         <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">20</span><span class="token comment">//          就是Model数据源                         -</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">//             ------------                               -</span>     <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//                         -----------------------------------</span>   </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​vue 官方提供的 vue-devtools 调试工具，能够方便开发者对 vue 项目进行调试与开发</p><p><strong>vue 的指令</strong></p><p>指令（Directives）是 vue 为开发者提供的模板语法，用于辅助开发者渲染页面的基本结构。</p><p>1、内容渲染指令</p><pre class="line-numbers language-none"><code class="language-none">v-text        &#123;&#123; &#125;&#125;        v-html           内容渲染指令用来辅助开发者渲染 DOM 元素的文本内容。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token comment">&lt;!-- &lt;p v-text="username">&lt;/p>    &lt;p v-text="gender">性别&lt;/p> --></span>//v-text 指令会覆盖元素内默认的值。   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>姓名：&#123;&#123;username&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>性别：&#123;&#123;gender&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                      //相对于 v-text 指令来说，插值表达式在开发中更常用一些！因为它不会覆盖元素中默认的文本内容。   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>---------<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123;desc&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>         //v-text 指令和插值表达式只能渲染纯文本内容。 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>     <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>     <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>       <span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token string">'zs'</span><span class="token punctuation">,</span>       <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">'男'</span><span class="token punctuation">,</span>       <span class="token literal-property property">desc</span><span class="token operator">:</span> <span class="token string">'&lt;i style="color:red;">abc&lt;i>'</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、属性绑定指令</p><pre class="line-numbers language-none"><code class="language-none">v-bind           为元素的属性动态绑定属性值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">v-bind:</span>placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inputValue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      //简记为  :placeholder="inputValue"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name"><span class="token namespace">v-bind:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgSrc<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                         //        :src="imgSrc".... data: &#123;          // 文本框的占位符内容          inputValue: '请输入内容',          // 图片的 src 地址          imgSrc: './images/logo.png',        &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 vue 提供的模板渲染语法中，除了支持绑定简单的数据值之外，还支持 Javascript 表达式的运算</p><p>3、数据绑定指令</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">v-on （简记为@）              为 DOM 元素绑定事件监听原生 DOM 对象有 onclick、oninput、onkeyup 等原生事件，替换为 vue 的事件绑定形式后，分别为：v-on:click、v-on:input、v-on:keyup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>count 的值为：&#123;&#123;count&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- TODO：点击按钮，让 data 中的 count 值自增 +1 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addCount<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            //等价于   @click="addCount"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过 v-on 绑定的事件处理函数，需要在 methods 节点中进行声明</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">methods: &#123;          // 点击按钮，让 count 自增 +1          addCount() &#123;            this.count += 1          &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>事件修饰符</p><p>.prevent   阻止默认行为    .stop   阻止事件冒泡     .once   绑定的事件只触发一次</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span> <span class="token attr-name">@click.once</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onInnerClick<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>按键修饰符</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">@keyup.esc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clearInput<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、双向绑定指令</p><pre class="line-numbers language-none"><code class="language-none">v-model      旨在不操作 DOM 的前提下，快速获取表单的数据（只能配合表单元素一起使用！）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>用户名是：&#123;&#123;username&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>province<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请选择<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>河北<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>黑龙江<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修饰符</p><pre class="line-numbers language-none"><code class="language-none">.number 自动将输入转换为数值型  .trim  自动过滤首尾留的空白字符   .lazy 在change时而不是input是更新<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、条件渲染指令</p><p>按需控制 DOM 的显示与隐藏</p><pre class="line-numbers language-none"><code class="language-none">v-if           动态地创建或移除 DOM 元素，适合于运行时条件很少改变的场景v-show         动态为元素添加或移除 style&#x3D;&quot;display: none;&quot; 样式，适合于频繁地切换的场景<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === <span class="token punctuation">'</span>A<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>优秀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === <span class="token punctuation">'</span>B<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>良好<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type === <span class="token punctuation">'</span>C<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>一般<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>差<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>6、列表渲染指令</p><pre class="line-numbers language-none"><code class="language-none">v-for           者基于一个数组来循环渲染相似的 UI 结构<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(user, index) in userlist<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        姓名：&#123;&#123;user.name&#125;&#125;      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>....data: &#123;          // 用户列表的数据          list: [            &#123; id: 1, name: 'zs' &#125;,            &#123; id: 2, name: 'ls' &#125;,          ],        &#125;,<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>明天会更好       吗？</title>
      <link href="/2022/05/07/ming-tian-hui-geng-hao-ma/"/>
      <url>/2022/05/07/ming-tian-hui-geng-hao-ma/</url>
      
        <content type="html"><![CDATA[<p>一、现状<br>易中天有言“现状不可描述“，那我冒着风险简单描述一下。<br>房地产：头部企业接连债务违约，房价开始下跌，成交量萎靡，人均房产面积数量是发达国家的几倍，法拍房数量指数增加。<br>制造业：本来就没有核心技术，赚个加工费。现在海外订单大量转移到东南亚印度。同时原料成本暴增，侵蚀现金流，挤压利润空间。<br>物流：2021年商用车销量低迷，车辆金融大面积违约。现在全国大量高速路口关闭，城市之间层层关卡，高速出口24小时大堵车。<br>餐饮类服务业：为底层劳动力提供大量工作岗位的餐饮服务业，疫情管控的城市不能堂食或者不能营业，大量开除员工，一个月的租金可能会亏完一年的利润。<br>教培行业：曾经为大学生提供巨量工作岗位的行业，现状你懂的。<br>旅游业：你懂的。<br>互联网：美股暴跌，退市风险、严卡上市导致融资渠道收紧，没钱可烧了。同时互联网技术应用成熟，产品内卷，审查趋严。<br>消费电子行业：以手机为例，人均换机时间曾长，红米等平价机型销量上升。<br>建筑施工：房建项目萎缩，账期在原有基础上进一步增加，基建项目政策不清晰，两者都受疫情管控影响，开工率低。<br>能源、原料：石油价格十年新高，带动其他原材料价格暴涨。<br>农牧渔业：受外国战争影响，粮食化肥价格暴涨，受疫情管控影响，生鲜蔬菜价格上涨，物流受限导致销量降低。<br>人口：增长数量创新低，今年可能负增长。</p><p>二、未来（个人预测）<br>一线城市外，房价下跌，断供现象常见。<br>海外订单转移，产业链头部外企撤离，国内工厂内卷，厂多单少。<br>银行坏账增加，贷款审批更加严格。<br>至少一年内疫情反复，管控政策无法解除。<br>新增人口数量进一步降低，进入负增长时代。<br>学生越来越少，学校和教师数量过剩。<br>科研：国际关系恶化可能导致科研合作停止，海外发文章越来越难。<br>工业品价格上涨，受物流影响，短期内江浙沪的超市可能会出现部分产品缺货现象。</p><p>三、建议<br>不要贷款或者借钱买房。<br>多囤积，囤积物资、金钱或者发展机会，例如多学习其他行业的技能。<br>慎重跳槽，不要创业，减少投资，有条件的话尽量考公务员或者事业单位。<br>少生娃。<br>关爱身边人，为自己利益考量的时候尽量不要损害别人的利益，无法对他人苦难感同身受的时候，尽量不要指责他人矫情、装抑郁、甚至是给境外势力递刀子。<br>学习了解基本求生技能。<br>秩序崩塌的时候，紧急时刻，回归野蛮。</p><p>四、逼逼叨环节<br>作为90后，我生长在经济高速增长的年代，潜意识里觉得这个世界就应该这样子，社会越来越发达，父母的工资越来越高，所有人的生活越来越好。<br>改革开放如火如荼的时候，没有人会想起，苏联和朝鲜也曾经是工业国家，曾经有过良好的物质生活条件。<br>家长们都是认为孩子努力就能考上大学，考上大学就有体面的工作，就能在大城市扎根生活，成为城里人。<br>我们上学读书的时候，总感觉天生我材必有用，无论从前什么行业，将来都能出人头地，大学毕业才知道什么是“生化环材”天坑专业，土木机械这种曾经挤破头的专业也成了劝退专业。<br>以前总是习惯了房价上涨，期待着自己有朝一日也借钱上车，坐享一年增值几十万的时代红利。<br>无法想象经济负增长的世界，就像无法想象手机摄像头像素、屏幕分辨率停滞增长。</p><p><strong>我对未来仍然有信心</strong>，但是至少两三年内，大家日子都不会很好过。就好像曾经的下岗潮，不影响历史的车轮滚滚前行，但是给无数人留下了苦涩的记忆，也有人撑不下去死在寒冬里。</p><p>如果运气好的话，一年后所有上述不利情况都有所缓解，然后百废俱兴。<br>如果运气不好，可能要10年后从头再来。<br>时代的一粒微尘，落到一个人的头上就是一座大山。<br>很不幸，我们赶上了。<br>很幸运，我们现在赶上了，不是十年前不是十年后，我们如今年轻力壮，抗得住一些磨难。</p><p>我们已经一只脚迈进了“乱纪元”。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 时政 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
